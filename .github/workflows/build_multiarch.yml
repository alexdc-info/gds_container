name: Build and Push Docker Image (Multi-Arch)

on:
  workflow_dispatch:
    inputs:
      container:
        description: 'Container Name:'
        required: true
      tag:
        description: 'Container Tag:'
        required: true

jobs:
  build-amd64:
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push amd64 image
        run: |
          CONTAINER="${{ github.event.inputs.container }}"
          TAG="${{ github.event.inputs.tag }}"
          DOCKERFILE="${CONTAINER}/${TAG}.dockerfile"

          if [ ! -f "$DOCKERFILE" ]; then
            echo "Dockerfile $DOCKERFILE does not exist!"
            exit 1
          fi

          echo "Building amd64 image..."

          docker buildx build \
            --platform linux/amd64 \
            -f "$DOCKERFILE" \
            -t "ghcr.io/${{ github.repository_owner }}/$CONTAINER:$TAG-amd64" \
            --push \
            "$CONTAINER/"

  build-arm64:
    runs-on: ubuntu-24.04-arm
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push arm64 image
        run: |
          CONTAINER="${{ github.event.inputs.container }}"
          TAG="${{ github.event.inputs.tag }}"
          DOCKERFILE="${CONTAINER}/${TAG}.dockerfile"

          docker buildx build \
            --platform linux/arm64 \
            -f "$DOCKERFILE" \
            -t "ghcr.io/${{ github.repository_owner }}/$CONTAINER:$TAG-arm64" \
            --push \
            "$CONTAINER/"

  create-multiarch:
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: write
    needs: [build-amd64, build-arm64]

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push multi-arch manifest
        run: |
          CONTAINER="${{ github.event.inputs.container }}"
          TAG="${{ github.event.inputs.tag }}"

          docker buildx imagetools create \
            -t "ghcr.io/${{ github.repository_owner }}/$CONTAINER:$TAG" \
            -t "ghcr.io/${{ github.repository_owner }}/$CONTAINER:latest" \
            "ghcr.io/${{ github.repository_owner }}/$CONTAINER:$TAG-amd64" \
            "ghcr.io/${{ github.repository_owner }}/$CONTAINER:$TAG-arm64"

